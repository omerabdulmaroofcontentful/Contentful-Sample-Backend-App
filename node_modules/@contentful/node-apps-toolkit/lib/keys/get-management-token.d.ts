import * as NodeCache from 'node-cache';
import { Logger, HttpClient } from '../utils';
export interface GetManagementTokenOptions {
    appInstallationId: string;
    spaceId: string;
    environmentId: string;
    keyId?: string;
    reuseToken?: boolean;
}
/**
 * Factory method for GetManagementToken
 * @internal
 */
export declare const createGetManagementToken: (log: Logger, http: HttpClient, existingCache?: NodeCache | undefined) => (privateKey: unknown, opts: GetManagementTokenOptions) => Promise<string>;
/**
 * Returns a Contentful Management API token from private key
 * Management tokens are cached internally until until they expire.
 * Pass `reuseToken: false` in the options for `getManagementToken` to disable this feature.
 *
 * NodeJS Contentful Apps need a management token to interact with Contentful's APIs.
 * Creating a management token requires a key pair to be registered for the app, follow
 * [this link](http://contentful./developers/docs/references/content-management-api/#/reference/app-keys/app-keys)
 * for more information on key pairs.
 *
 * Once a key pair is registered the getManagementToken function can be used to generate a valid token.
 *
 * ~~~
 * const {getManagementToken} = require('contentful-node-apps-toolkit')
 *
 * getManagementToken(PRIVATE_KEY, {appId, spaceId, environmentId})
 *    .then( (token) => {
 *      console.log('Here is your token')
 *      console.log(token)
 *    })
 * ~~~
 * @category Keys
 */
export declare const getManagementToken: (privateKey: string, opts: GetManagementTokenOptions) => Promise<string>;
